binary_sensor:
  - platform: group
    name: "Basement Occupancy"
    device_class: motion
    entities:
      - binary_sensor.basement_seating_motion
      - binary_sensor.basement_pir
      - binary_sensor.basement_tv
      - binary_sensor.people_in_basement

# ----------------------------------------------------------
# ----------------------------------------------------------

# device_id: c8cce925ffa216107cb550b229508a8e 
# entity_id: light.basement_lights_light


input_boolean:
  disable_basement_motion_automation:
    name: Disable Basement Motion Automation
    icon: mdi:arrow-decision-auto
    initial: false

template:
  - binary_sensor:
      - name: People in Basement
        state: >
          {{ is_state('sensor.kevin_ble', 'basement')
            or is_state('sensor.tamara_ble', 'basement')
            or is_state('sensor.denver_ble', 'basement')
            or is_state('sensor.charles_ble', 'basement')
            or is_state('sensor.keaton_ble', 'basement') }}
      - name: "Basement TV"
        icon: mdi:television
        state: >
          {{ is_state('media_player.living_room', 'playing') }}

      

# ----------------------------------------------------------
# ----------------------------------------------------------

timer:
  basement_light_timer:
    duration: "00:05:00"
    restore: true
    icon: mdi:timer
    name: "Basement Light Timer"


# ----------------------------------------------------------
# ----------------------------------------------------------

script:

  turn_on_basement_lights:
    sequence:
      - condition: and
        conditions:
          - condition: state
            entity_id: light.basement_light
            state: 'off'
          - condition: time
            after: '07:00:00'
            before: '23:00:00'
      - service: light.turn_on
        entity_id: light.basement_light
        data:
          brightness: 180

  turn_off_basement_lights:
    sequence:
      - condition: and
        conditions:
          - condition: state
            entity_id: light.basement_light
            state: 'on'
          - condition: state
            entity_id: binary_sensor.basement_occupancy
            state: 'off'
      - service: light.turn_off
        entity_id: light.basement_light
  
  start_basement_timer:
    sequence:
      - service: timer.start
        target:
          entity_id: timer.basement_light_timer
  
  cancel_basement_timer:
    sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.basement_light_timer


# ----------------------------------------------------------
# ----------------------------------------------------------

automation:

  - id: 'basement_automatic_lights'
    alias: 'Basement Automatic Lights'
    description: ''
    trigger:

      # -------------------------------------------
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.basement_light_timer
        id: Basement Light Timer Finished

      # -------------------------------------------    
      - platform: state
        entity_id: binary_sensor.basement_occupancy
        from: 'on'
        to: 'off'
        id: Basement Occupancy Cleared

      # ------------------------------------------- 
      - platform: state
        entity_id: binary_sensor.basement_occupancy
        from: 'off'
        to: 'on'
        id: Basement Occupancy Detected

    condition:
      - condition: state
        entity_id: input_boolean.disable_basement_motion_automation
        state: 'off'
      - condition: state
        entity_id: input_boolean.guest_mode
        state: 'off'
      - condition: state
        entity_id: input_boolean.disable_automations
        state: 'off'

    action:

      - choose:

        # ------------------------------------------- 
        - conditions:
          - condition: trigger
            id: Basement Occupancy Cleared
          sequence:
            - service: script.start_basement_timer
        # ------------------------------------------- 
        - conditions:
          - condition: trigger
            id: Basement Occupancy Detected
          sequence:
            - service: script.cancel_basement_timer
            - service: script.turn_on_basement_lights
        # ------------------------------------------- 
        - conditions:
          - condition: trigger
            id: Basement Light Timer Finished
          sequence:
            - service: script.turn_off_basement_lights

    mode: single